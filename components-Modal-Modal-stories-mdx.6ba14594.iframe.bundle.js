"use strict";(globalThis.webpackChunk_lokalise_louis=globalThis.webpackChunk_lokalise_louis||[]).push([[7425],{"./src/components/Modal/Modal.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TemplateConfirmModal:()=>TemplateConfirmModal,TemplateDangerModal:()=>TemplateDangerModal,TemplateModal:()=>TemplateModal,TemplateModalScrollable:()=>TemplateModalScrollable,TemplateScrollableDangerModal:()=>TemplateScrollableDangerModal,__namedExportsOrder:()=>__namedExportsOrder,confirmModal:()=>confirmModal,dangerModal:()=>dangerModal,default:()=>Modal_stories,defaultStory:()=>defaultStory,scrollable:()=>scrollable,scrollableDangerModal:()=>scrollableDangerModal});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),Button=__webpack_require__("./src/components/Button/Button.tsx"),Toast=__webpack_require__("./src/components/Toast/index.tsx"),Input=__webpack_require__("./src/components/Input/Input.tsx"),DatePicker=__webpack_require__("./src/components/DatePicker/DatePicker.tsx"),Select=__webpack_require__("./src/components/Select/Select.tsx"),clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),Modal_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/components/Modal/Modal.module.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(Modal_module.A,options);const Modal_Modal_module=Modal_module.A&&Modal_module.A.locals?Modal_module.A.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const useIsOverflow=ref=>{const[isOverflow,setIsOverflow]=(0,react.useState)(!1);return(0,react.useLayoutEffect)((()=>{const{current}=ref;if(!current)return;const observer=new ResizeObserver((()=>{setIsOverflow(current.scrollHeight>current.clientHeight)}));return observer.observe(current),()=>{observer.disconnect()}}),[ref]),isOverflow},ModalBody=({children,className})=>{const ref=(0,react.useRef)(null),isOverflow=useIsOverflow(ref);return(0,jsx_runtime.jsx)("div",{ref,className:(0,clsx.A)(Modal_Modal_module.main,className,{[Modal_Modal_module.mainOverFlow]:isOverflow}),children})};ModalBody.displayName="ModalBody";try{useIsOverflow.displayName="useIsOverflow",useIsOverflow.__docgenInfo={description:"",displayName:"useIsOverflow",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/components/ModalBody.tsx#useIsOverflow"]={docgenInfo:useIsOverflow.__docgenInfo,name:"useIsOverflow",path:"src/components/Modal/components/ModalBody.tsx#useIsOverflow"})}catch(__react_docgen_typescript_loader_error){}try{ModalBody.displayName="ModalBody",ModalBody.__docgenInfo={description:"",displayName:"ModalBody",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/components/ModalBody.tsx#ModalBody"]={docgenInfo:ModalBody.__docgenInfo,name:"ModalBody",path:"src/components/Modal/components/ModalBody.tsx#ModalBody"})}catch(__react_docgen_typescript_loader_error){}var Close=__webpack_require__("./src/foundations/icons/Close.tsx"),IconButton=__webpack_require__("./src/components/IconButton/IconButton.tsx");const Context=(0,react.createContext)({onClose:()=>{}}),{Provider}=Context;try{Provider.displayName="Provider",Provider.__docgenInfo={description:"",displayName:"Provider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/context.tsx#Provider"]={docgenInfo:Provider.__docgenInfo,name:"Provider",path:"src/components/Modal/context.tsx#Provider"})}catch(__react_docgen_typescript_loader_error){}const ModalCloseButton=({className})=>{const{onClose}=(0,react.useContext)(Context);return(0,jsx_runtime.jsx)(IconButton.K,{ariaLabel:"Close dialog",tooltipOverride:"Close",onClick:onClose,className,disableTooltipOnFocus:!0,children:(0,jsx_runtime.jsx)(Close.b,{})})};ModalCloseButton.displayName="ModalCloseButton";try{ModalCloseButton.displayName="ModalCloseButton",ModalCloseButton.__docgenInfo={description:"",displayName:"ModalCloseButton",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/components/ModalCloseButton.tsx#ModalCloseButton"]={docgenInfo:ModalCloseButton.__docgenInfo,name:"ModalCloseButton",path:"src/components/Modal/components/ModalCloseButton.tsx#ModalCloseButton"})}catch(__react_docgen_typescript_loader_error){}const ModalHeader=({children,className})=>(0,jsx_runtime.jsxs)("header",{className:(0,clsx.A)(Modal_Modal_module.header,className),children:[(0,jsx_runtime.jsx)("h2",{className:Modal_Modal_module.title,children}),(0,jsx_runtime.jsx)(ModalCloseButton,{})]});ModalHeader.displayName="ModalHeader";try{ModalHeader.displayName="ModalHeader",ModalHeader.__docgenInfo={description:"",displayName:"ModalHeader",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/components/ModalHeader.tsx#ModalHeader"]={docgenInfo:ModalHeader.__docgenInfo,name:"ModalHeader",path:"src/components/Modal/components/ModalHeader.tsx#ModalHeader"})}catch(__react_docgen_typescript_loader_error){}var es2015=__webpack_require__("./node_modules/react-focus-lock/dist/es2015/index.js"),Combination=__webpack_require__("./node_modules/react-remove-scroll/dist/es2015/Combination.js"),Portal=__webpack_require__("./src/components/Portal/Portal.tsx");const ModalShell=({children,opened,title,onClose,size="default",overflow="auto",inPortal=!0,className})=>{const overlayRef=(0,react.useRef)(null),dialogRef=(0,react.useRef)(null);(0,react.useEffect)((()=>{const overlayNode=overlayRef.current,dialogNode=dialogRef.current;if(!opened||!dialogNode||!overlayNode||dialogNode.open)return;const handleEscapeClose=event=>{event.defaultPrevented||"Escape"!==event.key||onClose()};return dialogNode.show(),document.addEventListener("keydown",handleEscapeClose),()=>{document.removeEventListener("keydown",handleEscapeClose)}}),[opened,onClose]);const scrollbarWidth=(()=>{const[scrollbarWidth,setScrollbarWidth]=(0,react.useState)(0);return(0,react.useLayoutEffect)((()=>{const outer=document.createElement("div");outer.style.visibility="hidden",outer.style.overflow="scroll",document.body.appendChild(outer);const inner=document.createElement("div");outer.appendChild(inner),setScrollbarWidth(outer.offsetWidth-inner.offsetWidth),outer?.parentNode?.removeChild(outer)}),[]),scrollbarWidth})();if(!opened)return null;const innerModal=(0,jsx_runtime.jsx)(es2015.Ay,{children:(0,jsx_runtime.jsx)(Combination.A,{children:(0,jsx_runtime.jsx)("div",{className:Modal_Modal_module.dialogOverlay,ref:overlayRef,children:(0,jsx_runtime.jsx)("dialog",{ref:dialogRef,"aria-label":title??"Dialog","aria-modal":"true",className:(0,clsx.A)(Modal_Modal_module.dialog,className,{[Modal_Modal_module[size]]:size}),style:{"--louis-modal-overflow":overflow},children:(0,jsx_runtime.jsx)(Provider,{value:{onClose},children:(0,jsx_runtime.jsx)("div",{className:Modal_Modal_module.content,style:{"--louis-modal-scrollbar-width":`${scrollbarWidth}px`},children})})})})})});return inPortal?(0,jsx_runtime.jsx)(Portal.Z,{children:innerModal}):innerModal};try{ModalShell.displayName="ModalShell",ModalShell.__docgenInfo={description:"",displayName:"ModalShell",props:{opened:{defaultValue:null,description:"Toggles whether the modal is shown.",name:"opened",required:!0,type:{name:"boolean"}},title:{defaultValue:null,description:"Renders text content as the title of the modal.",name:"title",required:!1,type:{name:"string"}},overflow:{defaultValue:{value:"auto"},description:"Sets css overflow.",name:"overflow",required:!1,type:{name:"Overflow"}},inPortal:{defaultValue:{value:"true"},description:"Toggles rendering in a portal container to prevent other elements from clipping or hiding the DateRangePicker popover.",name:"inPortal",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:'Function executed when the close button is clicked, or when the user presses "Escape". Not executed when the user clicks outside the modal.',name:"onClose",required:!0,type:{name:"() => void"}},children:{defaultValue:null,description:"Renders text content and / or any HTML node in the modal body.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Sets the css class attribute.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:{value:"default"},description:"Changes the modal max-width.",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"wide"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/components/ModalShell.tsx#ModalShell"]={docgenInfo:ModalShell.__docgenInfo,name:"ModalShell",path:"src/components/Modal/components/ModalShell.tsx#ModalShell"})}catch(__react_docgen_typescript_loader_error){}const Modal=({children,title,...restProps})=>(0,jsx_runtime.jsxs)(ModalShell,{title,...restProps,children:[(0,jsx_runtime.jsx)(ModalHeader,{children:title}),(0,jsx_runtime.jsx)(ModalBody,{children})]});Modal.displayName="Modal";try{Modal.displayName="Modal",Modal.__docgenInfo={description:"",displayName:"Modal",props:{opened:{defaultValue:null,description:"Toggles whether the modal is shown.",name:"opened",required:!0,type:{name:"boolean"}},title:{defaultValue:null,description:"Renders text content as the title of the modal.",name:"title",required:!1,type:{name:"string"}},overflow:{defaultValue:null,description:"Sets css overflow.",name:"overflow",required:!1,type:{name:"Overflow"}},inPortal:{defaultValue:null,description:"Toggles rendering in a portal container to prevent other elements from clipping or hiding the DateRangePicker popover.",name:"inPortal",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:'Function executed when the close button is clicked, or when the user presses "Escape". Not executed when the user clicks outside the modal.',name:"onClose",required:!0,type:{name:"() => void"}},children:{defaultValue:null,description:"Renders text content and / or any HTML node in the modal body.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Sets the css class attribute.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Changes the modal max-width.",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"wide"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/Modal.tsx#Modal"]={docgenInfo:Modal.__docgenInfo,name:"Modal",path:"src/components/Modal/Modal.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}var Tooltip=__webpack_require__("./src/components/Tooltip/Tooltip.tsx");const ModalFooter=({children,className})=>(0,jsx_runtime.jsx)("footer",{className:(0,clsx.A)(Modal_Modal_module.footer,className),children});ModalFooter.displayName="ModalFooter";try{ModalFooter.displayName="ModalFooter",ModalFooter.__docgenInfo={description:"",displayName:"ModalFooter",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/components/ModalFooter.tsx#ModalFooter"]={docgenInfo:ModalFooter.__docgenInfo,name:"ModalFooter",path:"src/components/Modal/components/ModalFooter.tsx#ModalFooter"})}catch(__react_docgen_typescript_loader_error){}const ConfirmModal=({children,confirmText,closeText="Close",loading=!1,title,tooltipTitle,onClose,onConfirm,...restProps})=>(0,jsx_runtime.jsxs)(ModalShell,{title,onClose,...restProps,children:[(0,jsx_runtime.jsx)(ModalHeader,{children:title}),(0,jsx_runtime.jsx)(ModalBody,{children}),(0,jsx_runtime.jsxs)(ModalFooter,{children:[(0,jsx_runtime.jsx)(Button.$,{appearance:"accent",variant:"tertiary",onClick:onClose,children:closeText}),(0,jsx_runtime.jsx)(Tooltip.m,{tooltip:tooltipTitle,show:!!tooltipTitle,children:(0,jsx_runtime.jsx)(Button.$,{appearance:"accent",variant:"primary",loading,onClick:onConfirm,children:confirmText})})]})]});ConfirmModal.displayName="ConfirmModal";try{ConfirmModal.displayName="ConfirmModal",ConfirmModal.__docgenInfo={description:"",displayName:"ConfirmModal",props:{opened:{defaultValue:null,description:"Toggles whether the modal is shown.",name:"opened",required:!0,type:{name:"boolean"}},title:{defaultValue:null,description:"Renders text content as the title of the modal.",name:"title",required:!1,type:{name:"string"}},overflow:{defaultValue:null,description:"Sets css overflow.",name:"overflow",required:!1,type:{name:"Overflow"}},inPortal:{defaultValue:null,description:"Toggles rendering in a portal container to prevent other elements from clipping or hiding the DateRangePicker popover.",name:"inPortal",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:'Function executed when the close button is clicked, or when the user presses "Escape". Not executed when the user clicks outside the modal.',name:"onClose",required:!0,type:{name:"() => void"}},children:{defaultValue:null,description:"Renders text content and / or any HTML node in the modal body.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Sets the css class attribute.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Changes the modal max-width.",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"wide"'}]}},confirmText:{defaultValue:null,description:"Renders text content in the confirm button.",name:"confirmText",required:!0,type:{name:"string"}},closeText:{defaultValue:{value:"Close"},description:"Renders text content in the close button.",name:"closeText",required:!1,type:{name:"string"}},loading:{defaultValue:{value:"false"},description:"Toggles the loading state for the confirm button.",name:"loading",required:!1,type:{name:"boolean"}},tooltipTitle:{defaultValue:null,description:"Renders a tooltip on the confirm button when passed.",name:"tooltipTitle",required:!1,type:{name:"string"}},onConfirm:{defaultValue:null,description:"Function executed when the confirm button is clicked.",name:"onConfirm",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/facades/ConfirmModal.tsx#ConfirmModal"]={docgenInfo:ConfirmModal.__docgenInfo,name:"ConfirmModal",path:"src/components/Modal/facades/ConfirmModal.tsx#ConfirmModal"})}catch(__react_docgen_typescript_loader_error){}const DangerModal=({children,confirmText,closeText="Close",loading=!1,title,tooltipTitle,onClose,onConfirm,...restProps})=>(0,jsx_runtime.jsxs)(ModalShell,{title,onClose,...restProps,children:[(0,jsx_runtime.jsx)(ModalHeader,{children:title}),(0,jsx_runtime.jsx)(ModalBody,{children}),(0,jsx_runtime.jsxs)(ModalFooter,{children:[(0,jsx_runtime.jsx)(Button.$,{appearance:"accent",variant:"tertiary",onClick:onClose,children:closeText}),(0,jsx_runtime.jsx)(Tooltip.m,{tooltip:tooltipTitle,show:!!tooltipTitle,children:(0,jsx_runtime.jsx)(Button.$,{appearance:"danger",variant:"primary",loading,onClick:onConfirm,children:confirmText})})]})]});DangerModal.displayName="DangerModal";try{DangerModal.displayName="DangerModal",DangerModal.__docgenInfo={description:"",displayName:"DangerModal",props:{opened:{defaultValue:null,description:"Toggles whether the modal is shown.",name:"opened",required:!0,type:{name:"boolean"}},title:{defaultValue:null,description:"Renders text content as the title of the modal.",name:"title",required:!1,type:{name:"string"}},overflow:{defaultValue:null,description:"Sets css overflow.",name:"overflow",required:!1,type:{name:"Overflow"}},inPortal:{defaultValue:null,description:"Toggles rendering in a portal container to prevent other elements from clipping or hiding the DateRangePicker popover.",name:"inPortal",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:'Function executed when the close button is clicked, or when the user presses "Escape". Not executed when the user clicks outside the modal.',name:"onClose",required:!0,type:{name:"() => void"}},children:{defaultValue:null,description:"Renders text content and / or any HTML node in the modal body.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Sets the css class attribute.",name:"className",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Changes the modal max-width.",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"wide"'}]}},confirmText:{defaultValue:null,description:"Renders text content in the confirm button.",name:"confirmText",required:!0,type:{name:"string"}},closeText:{defaultValue:{value:"Close"},description:"Renders text content in the close button.",name:"closeText",required:!1,type:{name:"string"}},loading:{defaultValue:{value:"false"},description:"Toggles the loading state for the confirm button.",name:"loading",required:!1,type:{name:"boolean"}},tooltipTitle:{defaultValue:null,description:"Renders a tooltip on the confirm button when passed.",name:"tooltipTitle",required:!1,type:{name:"string"}},onConfirm:{defaultValue:null,description:"Function executed when the confirm button is clicked.",name:"onConfirm",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Modal/facades/DangerModal.tsx#DangerModal"]={docgenInfo:DangerModal.__docgenInfo,name:"DangerModal",path:"src/components/Modal/facades/DangerModal.tsx#DangerModal"})}catch(__react_docgen_typescript_loader_error){}var external_STORYBOOK_MODULE_CLIENT_API_=__webpack_require__("@storybook/client-api");const TemplateModal=args=>{const{onClose,...restArgs}=args,[_,updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)();return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.$,{variant:"secondary",onClick:()=>updateArgs({opened:!0}),children:"Open Modal"}),(0,jsx_runtime.jsx)(Modal,{onClose:()=>updateArgs({opened:!1}),...restArgs,children:"This is a simple modal that has heading, close button and some spacing on the sides. ".repeat(10)})]})},TemplateConfirmModal=args=>{const _components=Object.assign({p:"p"},(0,lib.RP)()),{onClose,inputValue,dateValue,onConfirm,...restArgs}=args,[_,updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)(),selectEl=(0,react.useRef)(null);return(0,react.useEffect)((()=>{null!==selectEl.current&&selectEl.current.focus()}),[args.opened]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.$,{variant:"secondary",onClick:()=>updateArgs({opened:!0}),children:"Open ConfirmModal"}),(0,jsx_runtime.jsx)(Button.$,{onClick:()=>{(0,Toast.P0)({type:"success",title:"System-wide notification",autoClose:!1})},variant:"secondary",style:{marginLeft:"5px"},children:"Trigger toast notification"}),(0,jsx_runtime.jsxs)(ConfirmModal,{onClose:()=>updateArgs({opened:!1}),onConfirm:()=>updateArgs({opened:!1}),...restArgs,children:[(0,jsx_runtime.jsx)(Button.$,{onClick:()=>{(0,Toast.P0)({type:"success",title:"Modal notification",autoClose:!1})},variant:"secondary",children:"Trigger toast notification"}),(0,jsx_runtime.jsx)(_components.p,{children:"This is a modal that already provides all the necessary action buttons, and can take any other content or form fields."}),(0,jsx_runtime.jsx)(Input.p,{value:inputValue,onChange:event=>updateArgs({inputValue:event.target.value}),placeholder:"Enter text"},"textinput"),(0,jsx_runtime.jsx)(_components.p,{children:"For example, a DatePicker, using the positioning prop to ensure it can overlap outside of the Modal."}),(0,jsx_runtime.jsx)(DatePicker.l,{onChange:selectedDate=>updateArgs({dateValue:selectedDate}),value:dateValue,positioning:"fixed"}),(0,jsx_runtime.jsx)(_components.p,{children:"Or a Select menu that gets focus through useRef and useEffect, and uses the menuPosition prop to overlap outside of the Modal."}),(0,jsx_runtime.jsx)(Select.l,{options:[...Array(41).keys()].slice(1).map((e=>({value:"option"+e,label:"Option "+e}))),ref:selectEl,openMenuOnFocus:!0,isMulti:!0,menuPosition:"fixed"})]})]})},TemplateDangerModal=args=>{const{onClose,onConfirm,...restArgs}=args,[_,updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)();return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.$,{variant:"secondary",onClick:()=>updateArgs({opened:!0}),children:"Open DangerModal"}),(0,jsx_runtime.jsx)(DangerModal,{onClose:()=>updateArgs({opened:!1}),onConfirm:()=>updateArgs({opened:!1}),...restArgs,children:"This is a modal that already provides all the necessary action buttons. ".repeat(1)})]})},TemplateModalScrollable=args=>{const _components=Object.assign({form:"form"},(0,lib.RP)()),{onClose,title,...restArgs}=args,[_,updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)();return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.$,{variant:"secondary",onClick:()=>updateArgs({opened:!0}),children:"Open Modal"}),(0,jsx_runtime.jsx)(_components.form,{action:"",children:(0,jsx_runtime.jsxs)(ModalShell,{title,onClose:()=>updateArgs({opened:!1}),...restArgs,children:[(0,jsx_runtime.jsx)(ModalHeader,{children:title}),(0,jsx_runtime.jsx)(ModalBody,{children:"This modal is special with a modal body which is scrollable. If ModalBody and ModalFooter are used together inside ModalShell then ModalBody will become scrollable and modal will not exceed viewport height. ".repeat(100)}),(0,jsx_runtime.jsx)(ModalFooter,{children:(0,jsx_runtime.jsx)(Button.$,{variant:"primary",onClick:()=>updateArgs({opened:!1}),children:"Close"})})]})})]})},TemplateScrollableDangerModal=args=>{const{onClose,onConfirm,...restArgs}=args,[_,updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)();return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.$,{variant:"secondary",onClick:()=>updateArgs({opened:!0}),children:"Open DangerModal"}),(0,jsx_runtime.jsx)(DangerModal,{onClose:()=>updateArgs({opened:!1}),onConfirm:()=>updateArgs({opened:!1}),...restArgs,children:"This is a modal that already provides all the necessary action buttons. ".repeat(100)})]})};const defaultStory=TemplateModal.bind({});defaultStory.storyName="Default",defaultStory.args={opened:!1,title:"Default modal"},defaultStory.parameters={storySource:{source:'args => {\n  const {\n    onClose,\n    ...restArgs\n  } = args;\n  const [_, updateArgs] = useArgs();\n  return <>\n\t\t\t<Button variant="secondary" onClick={() => updateArgs({\n      opened: true\n    })}>\n\t\t\t\tOpen Modal\n\t\t\t</Button>\n\t\t\t<Modal onClose={() => updateArgs({\n      opened: false\n    })} {...restArgs}>\n\t\t\t\t{"This is a simple modal that has heading, close button and some spacing on the sides. ".repeat(10)}\n\t\t\t</Modal>\n\t\t</>;\n}'}};const confirmModal=TemplateConfirmModal.bind({});confirmModal.storyName="ConfirmModal",confirmModal.args={opened:!1,title:"Confirm modal",closeText:"Cancel",confirmText:"Confirm",onClose:()=>{},onConfirm:()=>{},loading:!1,tooltipTitle:"Click here to confirm",inputValue:"",dateValue:""},confirmModal.parameters={storySource:{source:'args => {\n  const {\n    onClose,\n    inputValue,\n    dateValue,\n    onConfirm,\n    ...restArgs\n  } = args;\n  const [_, updateArgs] = useArgs();\n  const selectEl = useRef(null);\n\n  const handleDateChange = selectedDate => updateArgs({\n    dateValue: selectedDate\n  });\n\n  useEffect(() => {\n    if (selectEl.current !== null) {\n      selectEl.current.focus();\n    }\n  }, [args.opened]);\n  return <>\n\t\t\t<Button variant="secondary" onClick={() => updateArgs({\n      opened: true\n    })}>\n\t\t\t\tOpen ConfirmModal\n\t\t\t</Button>\n\t\t\t<Button onClick={() => {\n      showToast({\n        type: "success",\n        title: "System-wide notification",\n        autoClose: false\n      });\n    }} variant="secondary" style={{\n      marginLeft: "5px"\n    }}>\n\t\t\t\tTrigger toast notification\n\t\t\t</Button>\n\t\t\t<ConfirmModal onClose={() => updateArgs({\n      opened: false\n    })} onConfirm={() => updateArgs({\n      opened: false\n    })} {...restArgs}>\n\t\t\t\t<Button onClick={() => {\n        showToast({\n          type: "success",\n          title: "Modal notification",\n          autoClose: false\n        });\n      }} variant="secondary">\n\t\t\t\t\tTrigger toast notification\n\t\t\t\t</Button>\n\t\t\t\t<p>\n\t\t\t\t\tThis is a modal that already provides all the necessary action buttons, and can take any other\n\t\t\t\t\tcontent or form fields.\n\t\t\t\t</p>\n\t\t\t\t<Input key="textinput" value={inputValue} onChange={event => updateArgs({\n        inputValue: event.target.value\n      })} placeholder="Enter text" />\n\t\t\t\t<p>\n\t\t\t\t\tFor example, a DatePicker, using the positioning prop to ensure it can overlap outside of the Modal.\n\t\t\t\t</p>\n\t\t\t\t<DatePicker onChange={handleDateChange} value={dateValue} positioning="fixed" />\n\t\t\t\t<p>\n\t\t\t\t\tOr a Select menu that gets focus through useRef and useEffect, and uses the menuPosition prop to\n\t\t\t\t\toverlap outside of the Modal.\n\t\t\t\t</p>\n\t\t\t\t<Select options={[...Array(41).keys()].slice(1).map(e => {\n        return {\n          value: "option" + e,\n          label: "Option " + e\n        };\n      })} ref={selectEl} openMenuOnFocus isMulti menuPosition="fixed" />\n\t\t\t</ConfirmModal>\n\t\t</>;\n}'}};const dangerModal=TemplateDangerModal.bind({});dangerModal.storyName="DangerModal",dangerModal.args={opened:!1,title:"Danger modal",closeText:"Cancel",confirmText:"Delete",onClose:()=>{},onConfirm:()=>{},loading:!1,tooltipTitle:"Click here to delete"},dangerModal.parameters={storySource:{source:'args => {\n  const {\n    onClose,\n    onConfirm,\n    ...restArgs\n  } = args;\n  const [_, updateArgs] = useArgs();\n  return <>\n\t\t\t<Button variant="secondary" onClick={() => updateArgs({\n      opened: true\n    })}>\n\t\t\t\tOpen DangerModal\n\t\t\t</Button>\n\t\t\t<DangerModal onClose={() => updateArgs({\n      opened: false\n    })} onConfirm={() => updateArgs({\n      opened: false\n    })} {...restArgs}>\n\t\t\t\t{"This is a modal that already provides all the necessary action buttons. ".repeat(1)}\n\t\t\t</DangerModal>\n\t\t</>;\n}'}};const scrollable=TemplateModalScrollable.bind({});scrollable.storyName="Scrollable",scrollable.args={opened:!1,title:"Scrollable",onClose:()=>{}},scrollable.parameters={storySource:{source:'args => {\n  const {\n    onClose,\n    title,\n    ...restArgs\n  } = args;\n  const [_, updateArgs] = useArgs();\n  return <>\n\t\t\t<Button variant="secondary" onClick={() => updateArgs({\n      opened: true\n    })}>\n\t\t\t\tOpen Modal\n\t\t\t</Button>\n\t\t\t<form action="">\n\t\t\t\t<ModalShell title={title} onClose={() => updateArgs({\n        opened: false\n      })} {...restArgs}>\n\t\t\t\t\t<ModalHeader>{title}</ModalHeader>\n\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t{"This modal is special with a modal body which is scrollable. If ModalBody and ModalFooter are used together inside ModalShell then ModalBody will become scrollable and modal will not exceed viewport height. ".repeat(100)}\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t<Button variant="primary" onClick={() => updateArgs({\n            opened: false\n          })}>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ModalFooter>\n\t\t\t\t</ModalShell>\n\t\t\t</form>\n\t\t</>;\n}'}};const scrollableDangerModal=TemplateScrollableDangerModal.bind({});scrollableDangerModal.storyName="ScrollableDangerModal",scrollableDangerModal.args={opened:!1,title:"Scrollable danger modal",closeText:"Cancel",confirmText:"Delete",onClose:()=>{},onConfirm:()=>{},loading:!1,tooltipTitle:"Click here to delete"},scrollableDangerModal.parameters={storySource:{source:'args => {\n  const {\n    onClose,\n    onConfirm,\n    ...restArgs\n  } = args;\n  const [_, updateArgs] = useArgs();\n  return <>\n\t\t\t<Button variant="secondary" onClick={() => updateArgs({\n      opened: true\n    })}>\n\t\t\t\tOpen DangerModal\n\t\t\t</Button>\n\t\t\t<DangerModal onClose={() => updateArgs({\n      opened: false\n    })} onConfirm={() => updateArgs({\n      opened: false\n    })} {...restArgs}>\n\t\t\t\t{"This is a modal that already provides all the necessary action buttons. ".repeat(100)}\n\t\t\t</DangerModal>\n\t\t</>;\n}'}};const componentMeta={title:"Components/Modal",parameters:{controls:{sort:"requiredFirst",exclude:["children"]},docs:{source:{excludeDecorators:!0}}},decorators:[Story=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Toast.N9,{}),Story()]})],component:Modal,subcomponents:{ConfirmModal,DangerModal,ModalShell},argTypes:{overflow:{control:{type:"text"}}},tags:["stories-mdx"],includeStories:["defaultStory","confirmModal","dangerModal","scrollable","scrollableDangerModal"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{})}):_createMdxContent();function _createMdxContent(){const _components=Object.assign({h1:"h1",ul:"ul",li:"li",a:"a",p:"p",code:"code",h3:"h3",pre:"pre",h4:"h4"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Components/Modal",component:Modal,subcomponents:{ConfirmModal,DangerModal,ModalShell},parameters:{controls:{sort:"requiredFirst",exclude:["children"]},docs:{source:{excludeDecorators:!0}}},argTypes:{overflow:{control:{type:"text"}}},decorators:[Story=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Toast.N9,{}),Story()]})]}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"modal",children:"Modal"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#overview",children:"Overview"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#figma-design-file",children:"Figma Design File"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#props",children:"Props"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#examples",children:"Examples"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)("h2",{id:"overview",children:"Overview"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Modal is a window overlaid on either the primary window or another dialog window. Content behind a modal is inert, meaning that users cannot interact with it."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Modal exports 3 facade components that are used for common modal use cases:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"Modal"}),": Opinionated facade component that provides reasonable defaults for most situations."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ConfirmModal"}),": Used to quickly create a confirmation modal with a primary confirm button and a secondary close button."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"DangerModal"}),": Used to quickly create a danger modal with a primary danger button and a secondary close button."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Modal exports 5 components to help you create any modal dialog:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalShell"}),": A modal with all the functionality but without header, close button, and paddings."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalCloseButton"}),": Button that closes the modal."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalHeader"}),": Component that wraps modal heading and close button."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalBody"}),": Wrapper for the content that adds spacing from the sides."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalFooter"}),": Wrapper that houses the modal actions. If used together with ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalBody"})," it makes ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalBody"})," scrollable."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalActions"}),": Wrapper that houses the modal actions."]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Modal accepts an ",(0,jsx_runtime.jsx)(_components.code,{children:"onClose"})," callback function which is called when the user presses ",(0,jsx_runtime.jsx)(_components.code,{children:"Escape"})," or clicks on the close button (or cancel button when using a ",(0,jsx_runtime.jsx)(_components.code,{children:"ConfirmModal"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"DangerModal"}),"). Clicks on the Modal backdrop are ignored."]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"installation",children:"Installation"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-bash",children:"npm install @lokalise/louis\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { useState } from 'react';\nimport { Modal, Button } from '@lokalise/louis';\n\nexport default () => {\n\tconst [opened, setOpened] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={() => setOpened(true)}>Open Modal</Button>\n\t\t\t<Modal opened={opened} title=\"Modal title\" onClose={() => setOpened(false)}>\n\t\t\t\t'This is a simple modal that has heading, close button and some spacing on the sides.'\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"testing",children:"Testing"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Modal is based on the ",(0,jsx_runtime.jsxs)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog",target:"_blank",children:[(0,jsx_runtime.jsx)(_components.code,{children:"<dialog>"})," element"]}),". Currently this element is not supported in jsdom.\nAs a workaround, you can use the following mocks in tests (can be added in global test setup):"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"vitest:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"beforeEach(() => {\n\tHTMLDialogElement.prototype.show = vi.fn(function mock(this: HTMLDialogElement) {\n\t\tthis.open = true;\n\t});\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"jest:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"beforeEach(() => {\n\tHTMLDialogElement.prototype.show = jest.fn(function mock(this: HTMLDialogElement) {\n\t\tthis.open = true;\n\t});\n});\n"})}),"\n",(0,jsx_runtime.jsx)("h2",{id:"figma-design-file",children:"Figma Design File"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"https://www.figma.com/file/zfCOLmZam4nrttG6IVzQyz/Louis?node-id=4032%3A36149",target:"_blank",rel:"nofollow noopener noreferrer",children:"Figma Source File | Modal"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)("h2",{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(dist.uY,{of:Modal,sort:"requiredFirst"}),"\n",(0,jsx_runtime.jsx)("h2",{id:"examples",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default",args:{opened:!1,title:"Default modal"},children:TemplateModal.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { useState } from 'react';\nimport { Modal, Button } from '@lokalise/louis';\n\nexport default () => {\n\tconst [opened, setOpened] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={() => setOpened(true)}>Open Modal</Button>\n\t\t\t<Modal opened={opened} title=\"Default modal\" onClose={() => setOpened(false)}>\n\t\t\t\t'This is a simple modal that has heading, close button and some spacing on the sides.'\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"confirmmodal",children:"ConfirmModal"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"ConfirmModal",args:{opened:!1,title:"Confirm modal",closeText:"Cancel",confirmText:"Confirm",onClose:()=>{},onConfirm:()=>{},loading:!1,tooltipTitle:"Click here to confirm",inputValue:"",dateValue:""},children:TemplateConfirmModal.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:'import { useState } from \'react\';\nimport { ConfirmModal, Button } from \'@lokalise/louis\';\n\nexport default () => {\n\tconst [opened, setOpened] = useState(false);\n\tconst selectEl = useRef(null);\n\tuseEffect(() => {\n\t\tif (selectEl.current !== null) {\n\t\t\tselectEl.current.focus();\n\t\t}\n\t}, opened);\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={() => setOpened(true)}>Open ConfirmModal</Button>\n\t\t\t<ConfirmModal\n\t\t\t\topened={opened}\n\t\t\t\ttitle="Confirm modal"\n\t\t\t\tonClose={() => setOpened(false)}\n\t\t\t\tonConfirm={() => setOpened(false)}\n\t\t\t>\n\t\t\t\t<p>\n\t\t\t\t\tThis is a modal that already provides all the necessary action buttons, and can take any other\n\t\t\t\t\tcontent or form fields.\n\t\t\t\t</p>\n\t\t\t\t<Input key="textinput" placeholder="Enter text" value={inputValue} onChange={handleInputChange} />\n\t\t\t\t<p>\n\t\t\t\t\tFor example, a DatePicker, using the positioning prop to ensure it can overlap outside of the Modal.\n\t\t\t\t</p>\n\t\t\t\t<DatePicker onChange={handleDateChange} value={dateValue} positioning="fixed" />\n\t\t\t\t<p>\n\t\t\t\t\tOr a Select menu that gets focus through useRef and useEffect, and uses the menuPosition prop to\n\t\t\t\t\toverlap outside of the Modal.\n\t\t\t\t</p>\n\t\t\t\t<Select\n\t\t\t\t\toptions={[...Array(41).keys()].slice(1).map((e) => {\n\t\t\t\t\t\treturn { value: \'option\' + e, label: \'Option \' + e };\n\t\t\t\t\t})}\n\t\t\t\t\tref={selectEl}\n\t\t\t\t\topenMenuOnFocus\n\t\t\t\t\tisMulti\n\t\t\t\t\tmenuPosition="fixed"\n\t\t\t\t/>\n\t\t\t</ConfirmModal>\n\t\t</>\n\t);\n};\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"dangermodal",children:"DangerModal"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"DangerModal",args:{opened:!1,title:"Danger modal",closeText:"Cancel",confirmText:"Delete",onClose:()=>{},onConfirm:()=>{},loading:!1,tooltipTitle:"Click here to delete"},children:TemplateDangerModal.bind({})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:"import { useState } from 'react';\nimport { DangerModal, Button } from '@lokalise/louis';\n\nexport default () => {\n\tconst [opened, setOpened] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={() => setOpened(true)}>Open DangerModal</Button>\n\t\t\t<DangerModal\n\t\t\t\topened={opened}\n\t\t\t\ttitle=\"Danger modal\"\n\t\t\t\tonClose={() => setOpened(false)}\n\t\t\t\tonConfirm={() => setOpened(false)}\n\t\t\t>\n\t\t\t\t'This is a modal that already provides all the necessary action buttons.'\n\t\t\t</DangerModal>\n\t\t</>\n\t);\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"scrollable",children:"Scrollable"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Make ",(0,jsx_runtime.jsx)(_components.code,{children:"Modal"})," contents scrollable by using ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalBody"})," together with ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFooter"})," inside ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalShell"}),". ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalHeader"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFooter"})," will stay fixed and modal will not exceed viewport height."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Source order matters, so make sure ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFooter"})," is used right after ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalBody"}),". For cases where ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalBody"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFooter"})," might be wrapped in a ",(0,jsx_runtime.jsx)(_components.code,{children:"form"})," element, just wrap whole ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalShell"})," in that element."]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"edge-cases",children:"Edge cases"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["This implementation is based on ",(0,jsx_runtime.jsx)(_components.code,{children:":has"})," CSS selector which currently is not supported in Firefox. In Firefox modal will have default scroll."]}),"\n",(0,jsx_runtime.jsxs)(dist.Hl,{withSource:"none",children:[(0,jsx_runtime.jsx)(dist.gG,{name:"Scrollable",args:{opened:!1,title:"Scrollable",onClose:()=>{}},children:TemplateModalScrollable.bind({})}),(0,jsx_runtime.jsx)(dist.gG,{name:"ScrollableDangerModal",args:{opened:!1,title:"Scrollable danger modal",closeText:"Cancel",confirmText:"Delete",onClose:()=>{},onConfirm:()=>{},loading:!1,tooltipTitle:"Click here to delete"},children:TemplateScrollableDangerModal.bind({})})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-tsx",children:'import { useState } from \'react\';\nimport { Modal, ModalShell, ModalHeader, ModalBody, ModalFooter, Button } from \'@lokalise/louis\';\n\nexport default () => {\n\tconst [opened, setOpened] = useState(false);\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={() => setOpened(true)}>Open Scrollable modal</Button>\n\t\t\t<Modal opened={opened} title="Scrollable" onClose={() => setOpened(false)}>\n\t\t\t\t<form action="">\n\t\t\t\t\t<ModalShell title="Scrollable" onClose={() => setOpened(false)}>\n\t\t\t\t\t\t<ModalHeader>Scrollable</ModalHeader>\n\t\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t\tThis modal is special with a modal body which is scrollable. If ModalBody and ModalFooter\n\t\t\t\t\t\t\tare used together inside ModalShell then ModalBody will become scrollable and modal will not\n\t\t\t\t\t\t\texceed viewport height.\n\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t\t<Button variant="secondary" onClick={() => setOpened(false)}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t</ModalShell>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n'})})]})}}};const Modal_stories=componentMeta,__namedExportsOrder=["TemplateModal","TemplateConfirmModal","TemplateDangerModal","TemplateModalScrollable","TemplateScrollableDangerModal","defaultStory","confirmModal","dangerModal","scrollable","scrollableDangerModal"]},"./src/components/DatePicker/DatePicker.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>DatePicker});var clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),DatePicker_module=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/components/DatePicker/DatePicker.module.css")),Calendar=__webpack_require__("./src/foundations/icons/Calendar.tsx"),useLocalisation=__webpack_require__("./src/utils/hooks/useLocalisation.ts"),BaseDatePicker=__webpack_require__("./src/components/InlineDatePicker/BaseDatePicker.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const InlineDatePicker=({onDayClick,...props})=>(0,jsx_runtime.jsx)(BaseDatePicker.C,{mode:"single",onDayClick:(day,activeModifiers,e)=>{onDayClick&&(day.setHours(12),onDayClick(day,activeModifiers,e))},...props});InlineDatePicker.displayName="InlineDatePicker";try{InlineDatePicker.displayName="InlineDatePicker",InlineDatePicker.__docgenInfo={description:"",displayName:"InlineDatePicker",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/InlineDatePicker/InlineDatePicker/InlineDatePicker.tsx#InlineDatePicker"]={docgenInfo:InlineDatePicker.__docgenInfo,name:"InlineDatePicker",path:"src/components/InlineDatePicker/InlineDatePicker/InlineDatePicker.tsx#InlineDatePicker"})}catch(__react_docgen_typescript_loader_error){}var useInputErrorMessages=__webpack_require__("./src/components/InputErrorMessage/useInputErrorMessages.ts"),InputErrorMessage=__webpack_require__("./src/components/InputErrorMessage/InputErrorMessage.tsx"),Popover=__webpack_require__("./src/components/Popover/Popover.tsx");const DatePicker=({name,value,disabledDays,onChange,error,inPortal=!1,positioning,className})=>{const{formatDate}=(0,useLocalisation.o)(),{isInvalid,errorMessages}=(0,useInputErrorMessages.A)(error);return(0,jsx_runtime.jsxs)("div",{className:(0,clsx.A)(DatePicker_module.A.container,className),children:[(0,jsx_runtime.jsx)(Popover.A,{placement:"bottom-start",offset:1,inPortal,positioning,content:setVisible=>(0,jsx_runtime.jsx)("div",{className:DatePicker_module.A.drawerContent,children:(0,jsx_runtime.jsx)(InlineDatePicker,{disabled:disabledDays,selected:value,onDayClick:(day,modifiers)=>{modifiers.disabled||(onChange(day),setVisible(!1))}})}),children:opened=>(0,jsx_runtime.jsxs)("button",{className:(0,clsx.A)(DatePicker_module.A.dateBox,{[DatePicker_module.A.dateBoxOpened]:opened,[DatePicker_module.A.dateBoxError]:isInvalid}),type:"button",name,"aria-label":"Select Date","aria-invalid":isInvalid,"aria-errormessage":errorMessages.length>0?errorMessages.map((err=>err.id)).join(" "):void 0,children:[(0,jsx_runtime.jsx)("span",{className:DatePicker_module.A.dateBoxLabel,children:value?formatDate(value,"PP"):(0,jsx_runtime.jsx)("span",{className:DatePicker_module.A.placeholder,children:"Select date..."})}),(0,jsx_runtime.jsx)("div",{className:DatePicker_module.A.iconWrapper,children:(0,jsx_runtime.jsx)(Calendar.V,{size:"17px"})})]})}),errorMessages.length>0&&(0,jsx_runtime.jsx)(InputErrorMessage.Y,{children:errorMessages})]})};DatePicker.displayName="DatePicker";try{DatePicker.displayName="DatePicker",DatePicker.__docgenInfo={description:"",displayName:"DatePicker",props:{name:{defaultValue:null,description:"Sets the `name` attribute of the DatePicker button element.",name:"name",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Sets a preselected date in the input field.",name:"value",required:!1,type:{name:"Date"}},onChange:{defaultValue:null,description:"Function executed when a date is selected.",name:"onChange",required:!0,type:{name:"(date: Date) => void"}},disabledDays:{defaultValue:null,description:'Sets the day(s) that should appear as disabled using "matching days modifiers": https://react-day-picker.js.org/basics/modifiers#disabling-days.',name:"disabledDays",required:!1,type:{name:"Matcher | Matcher[]"}},error:{defaultValue:null,description:"Renders a form validation `InputErrorMessage` when passed as `string | string[]`.",name:"error",required:!1,type:{name:"string | boolean | string[]"}},inPortal:{defaultValue:{value:"false"},description:"Toggles rendering in a portal container to prevent other elements from clipping or hiding the DatePicker popover.",name:"inPortal",required:!1,type:{name:"boolean"}},positioning:{defaultValue:null,description:"Sets the positioning of the DatePicker popover, uses the `Popover` defaults when not set.",name:"positioning",required:!1,type:{name:"enum",value:[{value:'"absolute"'},{value:'"fixed"'}]}},className:{defaultValue:null,description:"Sets the css class attribute.",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DatePicker/DatePicker.tsx#DatePicker"]={docgenInfo:DatePicker.__docgenInfo,name:"DatePicker",path:"src/components/DatePicker/DatePicker.tsx#DatePicker"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./src/components/Modal/Modal.module.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'._akYdg1M17z6uL5BvlWt {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: flex-start;\n\tpadding: var(--lok-spacing-6);\n}\n\n.taMY9eg8zLw0JawdTNt9 {\n\tfont: var(--lok-typography-heading-4);\n\tcolor: var(--lok-color-text-default);\n\twidth: 100%;\n\tmargin: 0;\n}\n\n.UQyxg1eidFRQelPqG1Ry {\n\tpadding: var(--lok-spacing-0) var(--lok-spacing-6) var(--lok-spacing-6) var(--lok-spacing-6);\n}\n\n.T3ANvH4CooU7GAC618NH {\n\tbox-shadow:\n\t\t0 1px 0 0 var(--lok-color-border-light),\n\t\t0 -1px 0 0 var(--lok-color-border-light);\n}\n\n.gnSgL4147NPfM4s5zqOy {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: var(--lok-spacing-2);\n\tpadding: var(--lok-spacing-6);\n}\n\n.xk3VMIVCJHVCUQObYk4r {\n\t/*\n\t* Section should be scrollable only when Footer is present. In Expert (lokalise-main) Modal grows as high\n\t* as it needs and when it gets higher than viewport body becomes scrollable. In order to not break this behavior\n\t* and have backwards compatability we can detect if the Footer and Main is present and only then make Main\n\t* scrollable. Hawing modal scrollable without footer probably would be wierd.\n\t*/\n\n\t/* // ":has" is not supported in Firefox - fall back to default Modal scroll. */\n\t&:has(.gnSgL4147NPfM4s5zqOy) {\n\t\t/* // Handle an edge case on small screens - if screen height is too small fall back to default Modal scroll. */\n\t\t@media (height >= 400px) {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tmax-height: calc(100vh - var(--lok-spacing-3) * 2);\n\n\t\t\t@media (width >= 768px) {\n\t\t\t\tmax-height: calc(100vh - var(--lok-spacing-7) * 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t&:has(.gnSgL4147NPfM4s5zqOy) .UQyxg1eidFRQelPqG1Ry {\n\t\t@media (height >= 400px) {\n\t\t\toverflow-y: auto;\n\n\t\t\t/* // Adds padding in a width of a scrollbar even when the scrollbar is not present which fixes the issue with shifting content. */\n\t\t\tscrollbar-gutter: stable;\n\t\t\tpadding: var(--lok-spacing-6);\n\n\t\t\t/*\n\t\t\t* "scrollbar-gutter" are not supported on Safari. There the layout will shift to the right if scrollbar will\n\t\t\t* be present. It is possible to determine overflow by JS, but in case there is a shift to or from this\n\t\t\t* "overflow" state, content jumps for a split second. It happens because time passes between the appearance\n\t\t\t* of scrollbar and the time it takes to add/remove CSS and recalculate layout.\n\t\t\t*/\n\t\t\t@supports (scrollbar-gutter: stable) {\n\t\t\t\t/* // Subtract padding added by "scrollbar-gutter". */\n\t\t\t\t/* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */\n\t\t\t\tpadding-right: calc(var(--lok-spacing-6) - var(--louis-modal-scrollbar-width));\n\t\t\t}\n\t\t}\n\t}\n}\n\n.Af_W4gWaq85W4ylyc_wY {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: var(--lok-spacing-2);\n\tpadding-top: var(--lok-spacing-6);\n\n\t@media (width >= 768px) {\n\t\tpadding-top: var(--lok-spacing-7);\n\t}\n}\n\n.Vkrb5M6TDlUfAqoKgUhL {\n\tbackground: rgb(0 0 0 / 50%);\n\tposition: fixed;\n\tinset: 0;\n\toverflow: auto;\n\tz-index: var(--lok-z-index-modal);\n}\n\n.qdceAaQVLOs7aE9lgupz {\n\tbackground-color: var(--lok-color-background-surface-default);\n\tborder-radius: var(--lok-radius-modal);\n\tborder: none;\n\tbox-sizing: border-box;\n\tfont: var(--lok-typography-body-small-default);\n\tcolor: var(--lok-color-text-default);\n\tmargin: revert; /* // ensure that browser can determine the correct margins to position the dialog */\n\tmargin-top: var(--lok-spacing-3);\n\tpadding: 0;\n\t/* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */\n\toverflow: var(--louis-modal-overflow);\n\n\t@media (width >= 768px) {\n\t\tmargin-top: var(--lok-spacing-7);\n\t}\n\n\twidth: 100%;\n\n\t--louis-modal-double-padding: 24px;\n\t--louis-modal-small-width: 320px;\n\t--louis-modal-wide-width: 840px;\n\t--louis-modal-default-width: 640px;\n}\n\n.bnwOIhKLeWV4Am5PFlKm {\n\tmax-width: calc(100% - var(--louis-modal-double-padding));\n\n\t/* small-width + double-padding */\n\t@media (width >= 344px) {\n\t\tmax-width: var(--louis-modal-small-width);\n\t}\n}\n\n.NEfJBnQh5YRbKNc_Y6gl {\n\tmax-width: calc(100% - var(--louis-modal-double-padding));\n\n\t/* wide-width + double-padding */\n\t@media (width >= 864px) {\n\t\tmax-width: var(--louis-modal-wide-width);\n\t}\n}\n\n._NZo187HIzg8EE01okBw {\n\tmax-width: calc(100% - var(--louis-modal-double-padding));\n\n\t/* default-width + double-padding */\n\t@media (width >= 664px) {\n\t\tmax-width: var(--louis-modal-default-width);\n\t}\n}\n',"",{version:3,sources:["webpack://./src/components/Modal/Modal.module.css"],names:[],mappings:"AAAA;CACC,aAAa;CACb,8BAA8B;CAC9B,uBAAuB;CACvB,6BAA6B;AAC9B;;AAEA;CACC,qCAAqC;CACrC,oCAAoC;CACpC,WAAW;CACX,SAAS;AACV;;AAEA;CACC,4FAA4F;AAC7F;;AAEA;CACC;;0CAEyC;AAC1C;;AAEA;CACC,aAAa;CACb,yBAAyB;CACzB,yBAAyB;CACzB,6BAA6B;AAC9B;;AAEA;CACC;;;;;EAKC;;CAED,+EAA+E;CAC/E;EACC,+GAA+G;EAC/G;GACC,aAAa;GACb,sBAAsB;GACtB,kDAAkD;;GAElD;IACC,kDAAkD;GACnD;EACD;CACD;;CAEA;EACC;GACC,gBAAgB;;GAEhB,kIAAkI;GAClI,wBAAwB;GACxB,6BAA6B;;GAE7B;;;;;IAKC;GACD;IACC,qDAAqD;IACrD,4EAA4E;IAC5E,8EAA8E;GAC/E;EACD;CACD;AACD;;AAEA;CACC,aAAa;CACb,yBAAyB;CACzB,yBAAyB;CACzB,iCAAiC;;CAEjC;EACC,iCAAiC;CAClC;AACD;;AAEA;CACC,4BAA4B;CAC5B,eAAe;CACf,QAAQ;CACR,cAAc;CACd,iCAAiC;AAClC;;AAEA;CACC,6DAA6D;CAC7D,sCAAsC;CACtC,YAAY;CACZ,sBAAsB;CACtB,8CAA8C;CAC9C,oCAAoC;CACpC,cAAc,EAAE,oFAAoF;CACpG,gCAAgC;CAChC,UAAU;CACV,4EAA4E;CAC5E,qCAAqC;;CAErC;EACC,gCAAgC;CACjC;;CAEA,WAAW;;CAEX,kCAAkC;CAClC,gCAAgC;CAChC,+BAA+B;CAC/B,kCAAkC;AACnC;;AAEA;CACC,yDAAyD;;CAEzD,iCAAiC;CACjC;EACC,yCAAyC;CAC1C;AACD;;AAEA;CACC,yDAAyD;;CAEzD,gCAAgC;CAChC;EACC,wCAAwC;CACzC;AACD;;AAEA;CACC,yDAAyD;;CAEzD,mCAAmC;CACnC;EACC,2CAA2C;CAC5C;AACD",sourcesContent:['.header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: flex-start;\n\tpadding: var(--lok-spacing-6);\n}\n\n.title {\n\tfont: var(--lok-typography-heading-4);\n\tcolor: var(--lok-color-text-default);\n\twidth: 100%;\n\tmargin: 0;\n}\n\n.main {\n\tpadding: var(--lok-spacing-0) var(--lok-spacing-6) var(--lok-spacing-6) var(--lok-spacing-6);\n}\n\n.mainOverFlow {\n\tbox-shadow:\n\t\t0 1px 0 0 var(--lok-color-border-light),\n\t\t0 -1px 0 0 var(--lok-color-border-light);\n}\n\n.footer {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: var(--lok-spacing-2);\n\tpadding: var(--lok-spacing-6);\n}\n\n.content {\n\t/*\n\t* Section should be scrollable only when Footer is present. In Expert (lokalise-main) Modal grows as high\n\t* as it needs and when it gets higher than viewport body becomes scrollable. In order to not break this behavior\n\t* and have backwards compatability we can detect if the Footer and Main is present and only then make Main\n\t* scrollable. Hawing modal scrollable without footer probably would be wierd.\n\t*/\n\n\t/* // ":has" is not supported in Firefox - fall back to default Modal scroll. */\n\t&:has(.footer) {\n\t\t/* // Handle an edge case on small screens - if screen height is too small fall back to default Modal scroll. */\n\t\t@media (height >= 400px) {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tmax-height: calc(100vh - var(--lok-spacing-3) * 2);\n\n\t\t\t@media (width >= 768px) {\n\t\t\t\tmax-height: calc(100vh - var(--lok-spacing-7) * 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t&:has(.footer) .main {\n\t\t@media (height >= 400px) {\n\t\t\toverflow-y: auto;\n\n\t\t\t/* // Adds padding in a width of a scrollbar even when the scrollbar is not present which fixes the issue with shifting content. */\n\t\t\tscrollbar-gutter: stable;\n\t\t\tpadding: var(--lok-spacing-6);\n\n\t\t\t/*\n\t\t\t* "scrollbar-gutter" are not supported on Safari. There the layout will shift to the right if scrollbar will\n\t\t\t* be present. It is possible to determine overflow by JS, but in case there is a shift to or from this\n\t\t\t* "overflow" state, content jumps for a split second. It happens because time passes between the appearance\n\t\t\t* of scrollbar and the time it takes to add/remove CSS and recalculate layout.\n\t\t\t*/\n\t\t\t@supports (scrollbar-gutter: stable) {\n\t\t\t\t/* // Subtract padding added by "scrollbar-gutter". */\n\t\t\t\t/* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */\n\t\t\t\tpadding-right: calc(var(--lok-spacing-6) - var(--louis-modal-scrollbar-width));\n\t\t\t}\n\t\t}\n\t}\n}\n\n.actions {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: var(--lok-spacing-2);\n\tpadding-top: var(--lok-spacing-6);\n\n\t@media (width >= 768px) {\n\t\tpadding-top: var(--lok-spacing-7);\n\t}\n}\n\n.dialogOverlay {\n\tbackground: rgb(0 0 0 / 50%);\n\tposition: fixed;\n\tinset: 0;\n\toverflow: auto;\n\tz-index: var(--lok-z-index-modal);\n}\n\n.dialog {\n\tbackground-color: var(--lok-color-background-surface-default);\n\tborder-radius: var(--lok-radius-modal);\n\tborder: none;\n\tbox-sizing: border-box;\n\tfont: var(--lok-typography-body-small-default);\n\tcolor: var(--lok-color-text-default);\n\tmargin: revert; /* // ensure that browser can determine the correct margins to position the dialog */\n\tmargin-top: var(--lok-spacing-3);\n\tpadding: 0;\n\t/* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */\n\toverflow: var(--louis-modal-overflow);\n\n\t@media (width >= 768px) {\n\t\tmargin-top: var(--lok-spacing-7);\n\t}\n\n\twidth: 100%;\n\n\t--louis-modal-double-padding: 24px;\n\t--louis-modal-small-width: 320px;\n\t--louis-modal-wide-width: 840px;\n\t--louis-modal-default-width: 640px;\n}\n\n.small {\n\tmax-width: calc(100% - var(--louis-modal-double-padding));\n\n\t/* small-width + double-padding */\n\t@media (width >= 344px) {\n\t\tmax-width: var(--louis-modal-small-width);\n\t}\n}\n\n.wide {\n\tmax-width: calc(100% - var(--louis-modal-double-padding));\n\n\t/* wide-width + double-padding */\n\t@media (width >= 864px) {\n\t\tmax-width: var(--louis-modal-wide-width);\n\t}\n}\n\n.default {\n\tmax-width: calc(100% - var(--louis-modal-double-padding));\n\n\t/* default-width + double-padding */\n\t@media (width >= 664px) {\n\t\tmax-width: var(--louis-modal-default-width);\n\t}\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={header:"_akYdg1M17z6uL5BvlWt",title:"taMY9eg8zLw0JawdTNt9",main:"UQyxg1eidFRQelPqG1Ry",mainOverFlow:"T3ANvH4CooU7GAC618NH",footer:"gnSgL4147NPfM4s5zqOy",content:"xk3VMIVCJHVCUQObYk4r",actions:"Af_W4gWaq85W4ylyc_wY",dialogOverlay:"Vkrb5M6TDlUfAqoKgUhL",dialog:"qdceAaQVLOs7aE9lgupz",small:"bnwOIhKLeWV4Am5PFlKm",wide:"NEfJBnQh5YRbKNc_Y6gl",default:"_NZo187HIzg8EE01okBw"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);